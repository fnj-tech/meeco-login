apply plugin: 'com.android.application'
apply plugin: 'android-apt'

dependencies {
    apt "com.jakewharton:butterknife:${butterKnifeVersion}"
    apt "net.vvakame:jsonpullparser-apt:${jppVersion}"
    // libs/ にある *.jar を一括で追加する
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.android.support:support-v4:20.0.0'
    compile 'com.jakewharton:butterknife:5.1.1'
    compile 'com.squareup.dagger:dagger:1.2.1'
    compile 'com.android.support:support-annotations:20.0.0'
    compile 'com.android.support:support-v13:20.0.0'
    compile 'com.jakewharton:butterknife:5.1.1'
    compile 'com.android.support:support-annotations:20.0.0'
}

android {
    buildToolsVersion '20.0.0'
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 19

        // support renderscript を使う場合
        //renderscriptTargetApi 19
        //renderscriptSupportMode true

        versionCode 12
        versionName '0.0.12'
    }
    productFlavors {
        insideBrowser {
            applicationId 'jp.co.fnj.meecologin.insidebrowser'
            buildConfigField "boolean", "INSIDE_BROWSER", "true"
            buildConfigField "boolean", "INSIDE_BROWSER_HORIZONTAL", "false"
            manifestPlaceholders = [screenOrientation: "unspecified"]
            targetSdkVersion 19
            minSdkVersion 15
            versionCode 12
            versionName '0.0.12'
        }
        insideBrowserHorizontal {
            applicationId 'jp.co.fnj.meecologin.insidebrowser.horizontal'
            buildConfigField "boolean", "INSIDE_BROWSER", "true"
            buildConfigField "boolean", "INSIDE_BROWSER_HORIZONTAL", "true"
            manifestPlaceholders = [screenOrientation: "landscape"]
            minSdkVersion 15
            targetSdkVersion 19
            versionCode 12
            versionName '0.0.12'
        }
        outsideBrowser {
            applicationId 'jp.co.fnj.meecologin.outsidebrowser'
            buildConfigField "boolean", "INSIDE_BROWSER", "false"
            buildConfigField "boolean", "INSIDE_BROWSER_HORIZONTAL", "false"
            manifestPlaceholders = [screenOrientation: "unspecified"]
            minSdkVersion 15
            targetSdkVersion 19
            versionCode 12
            versionName '0.0.12'
        }
    }
    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        // exclude duplicate files in apache commons
        // pickFirst なら最初に見つけたやつが apk に入る
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    signingConfigs {
        // debug {
        //     storeFile file("debug.keystore")
        // }

        release
    }
    aaptOptions {
        // 最近の PNG processor が生成するファイルがGB端末上でクラッシュを引き起こすとのことなので、2系をサポートするなら以下の設定を使う
        // useAaptPngCruncher = true

        // android wear 用の apk を asset に置く場合に、圧縮を行わないようにするための設定
        // see http://developer.android.com/training/wearables/apps/packaging.html
        noCompress "apk"
    }
    buildTypes {
        release {
            runProguard true
            proguardFile 'Unrecognized value'
            proguardFile file('proguard-rules.pro')
            // gradle.properties にリリース署名用の設定があれば署名を有効化します。設定のサンプルとして gradle.properties.forReleaseSigning を置いたので参考にしてください。
            if (project.hasProperty('storeFile')) {
                signingConfig signingConfigs.release
            }
        }
    }
    task ndkBuild(type: Exec) {
        commandLine 'ndk-build', '-j'
    }
    task ndkClean(type: Exec) {
        commandLine 'ndk-build', 'clean'
    }
    task libsClean(type: Exec) {
        commandLine 'rm', '-rf', 'libs/armeabi', 'libs/armeabi-v7a', 'libs/x86', 'libs/mips'
    }
    if (new File(projectDir, "jni").exists()) {
        tasks.withType(Compile) {
            compileTask -> compileTask.dependsOn ndkBuild
        }

        tasks.withType(com.android.build.gradle.tasks.PackageApplication) {
            pkgTask -> pkgTask.jniDir new File(projectDir, 'libs')
        }

        clean.dependsOn 'ndkClean'
        clean.dependsOn 'libsClean'
    }
    compileSdkVersion 20
}

if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}
